{"version":3,"sources":["webpack:///src/app/recurring-payment/recurring-payment-routing.module.ts","webpack:///src/app/recurring-payment/recurring-payment.module.ts","webpack:///src/app/recurring-payment/recurring-payment.page.ts","webpack:///src/app/recurring-payment/recurring-payment.page.scss","webpack:///src/app/recurring-payment/recurring-payment.page.html"],"names":["routes","path","component","RecurringPaymentPage","RecurringPaymentPageRoutingModule","NgModule","imports","RouterModule","exports","RecurringPaymentPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","apiServices","formBuilder","loginService","router","isError","btnTxt","local","currentUser","value","formGroup","group","topUpAmount","FormControl","Validators","creditLimit","cardId","getSavedCards","get","user","console","log","savedCards$","userDetails","id","pipe","tap","cards","catchError","err","EMPTY","values","payLoad","valid","post","subscribe","res","navigate","error","BusinessPaymentService","FormBuilder","LoginService","Router","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,qDAAAC;AAFb,OADqB,CAAvB;;UAWaC,kCAAiC;AAAA;AAAA,O;;AAAjCA,wCAAiC,uDAJ7C,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAI6C,GAAjCH,kCAAiC,CAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIAK,2BAA0B;AAAA;AAAA,O;;AAA1BA,iCAA0B,uDAVtC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,4CAAAC,mBAJO,EAKP,+DAAAT,iCALO,CADD;AAQRU,oBAAY,EAAE,CAAC,qDAAAX,oBAAD;AARN,OAAT,CAUsC,GAA1BM,2BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAN,qBAAoB;AAM/B,sCACUY,WADV,EAEUC,WAFV,EAGUC,YAHV,EAIUC,MAJV,EAIwB;AAAA;;AAHd,eAAAH,WAAA,GAAAA,WAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AARV,eAAAC,OAAA,GAAmB,KAAnB;AACA,eAAAC,MAAA,GAAS,MAAT;AAEA,eAAAC,KAAA,GAAQ,KAAKJ,YAAL,CAAkBK,WAAlB,CAA8BC,KAAtC;AAMK;;AAX0B;AAAA;AAAA,iBAa/B,oBAAW;AACT,iBAAKC,SAAL,GAAiB,KAAKR,WAAL,CAAiBS,KAAjB,CAAuB;AACtCC,yBAAW,EAAE,IAAI,4CAAAC,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,4CAAAC,UAAA,SAAD,CAApB,CADyB;AAEtCC,yBAAW,EAAE,IAAI,4CAAAF,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,4CAAAC,UAAA,SAAD,CAApB,CAFyB;AAGtCE,oBAAM,EAAE,IAAI,4CAAAH,WAAJ,CAAgB,EAAhB,EAAoB,CAAC,4CAAAC,UAAA,SAAD,CAApB;AAH8B,aAAvB,CAAjB;AAKA,iBAAKG,aAAL;AACD;AApB8B;AAAA;AAAA,eAsB/B,eAAkB;AAChB,mBAAO,KAAKP,SAAL,CAAeQ,GAAf,CAAmB,aAAnB,CAAP;AACD;AAxB8B;AAAA;AAAA,eAyB/B,eAAkB;AAChB,mBAAO,KAAKR,SAAL,CAAeQ,GAAf,CAAmB,aAAnB,CAAP;AACD;AA3B8B;AAAA;AAAA,eA4B/B,eAAa;AACX,mBAAO,KAAKR,SAAL,CAAeQ,GAAf,CAAmB,QAAnB,CAAP;AACD;AA9B8B;AAAA;AAAA,iBAgC/B,yBAAgB;AACd,gBAAIC,IAAI,GAAG,KAAKhB,YAAL,CAAkBK,WAAlB,CAA8BC,KAAzC;AACAW,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAKG,WAAL,GAAmB,KAAKrB,WAAL,CAAiBiB,GAAjB,CAAqB,sBAArB,EAA6C,gBAAgBC,IAAI,CAACI,WAAL,CAAiBC,EAA9E,EAAkFC,IAAlF,CACjB,gDAAAC,GAAA,EAAI,UAACC,KAAD;AAAA,qBAAW,WAAWA,KAAtB;AAAA,aAAJ,CADiB,EAEjB,gDAAAC,UAAA,EAAW,UAACC,GAAD,EAAS;AAClB,qBAAO,kCAAAC,KAAP;AACD,aAFD,CAFiB,CAAnB;AAMD;AAzC8B;AAAA;AAAA,iBA2C/B,8BAAqBC,MAArB,EAA6B;AAAA;;AAC3B,iBAAKzB,MAAL,GAAc,gBAAd;AACA,gBAAI0B,OAAO,GAAGD,MAAd;AACAC,mBAAO,CAAC,QAAD,CAAP,GAAoB,KAAKzB,KAAL,CAAWgB,WAAX,CAAuBC,EAA3C;AACA,iBAAKnB,OAAL,GAAe,KAAf;;AACA,gBAAI,KAAKK,SAAL,CAAeuB,KAAnB,EAA0B;AACxB,mBAAKhC,WAAL,CAAiBiC,IAAjB,CAAsB,WAAtB,EAAmCF,OAAnC,EAA4CG,SAA5C,CAAsD,UAAAC,GAAG,EAAI;AAC3D,qBAAI,CAAC9B,MAAL,GAAc,MAAd;AACAc,uBAAO,CAACC,GAAR,CAAYe,GAAZ;;AACA,qBAAI,CAAChC,MAAL,CAAYiC,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,eAJD,EAIG,UAAAC,KAAK,EAAI;AACV,qBAAI,CAAChC,MAAL,GAAc,MAAd;AACAc,uBAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD,eAPD;AAQD,aATD,MAUK;AACH,mBAAKhC,MAAL,GAAc,MAAd;AACA,mBAAKD,OAAL,GAAe,IAAf;AACD;AACF;AA9D8B;;AAAA;AAAA,S;;;;gBAhBxB,gEAAAkC;;gBAIP,4CAAAC;;gBAHO,qDAAAC;;gBACA,6CAAAC;;;;AAcIrD,2BAAoB,uDALhC,gDAAAsD,SAAA,EAAU;AACTC,gBAAQ,EAAE,uBADD;AAETC,gBAAQ,EAAR,+EAFS;;AAAA,OAAV,CAKgC,GAApBxD,qBAAoB,CAApB;;;;;;;;;ACjBb;;;AAAA,uCAAe,u6FAAf;;;;;;;;;ACAA;;;AAAA,uCAAe,w1GAAf","file":"src_app_recurring-payment_recurring-payment_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecurringPaymentPage } from './recurring-payment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecurringPaymentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecurringPaymentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecurringPaymentPageRoutingModule } from './recurring-payment-routing.module';\n\nimport { RecurringPaymentPage } from './recurring-payment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RecurringPaymentPageRoutingModule\n  ],\n  declarations: [RecurringPaymentPage]\n})\nexport class RecurringPaymentPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BusinessPaymentService } from '../services/business-payment.service';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { Observable, EMPTY } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n@Component({\n  selector: 'app-recurring-payment',\n  templateUrl: './recurring-payment.page.html',\n  styleUrls: ['./recurring-payment.page.scss'],\n})\nexport class RecurringPaymentPage implements OnInit {\n  formGroup: FormGroup\n  isError: boolean = false\n  btnTxt = 'Save'\n  savedCards$: Observable<any>\n  local = this.loginService.currentUser.value\n  constructor(\n    private apiServices: BusinessPaymentService,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      topUpAmount: new FormControl(\"\", [Validators.required]),\n      creditLimit: new FormControl(\"\", [Validators.required]),\n      cardId: new FormControl(\"\", [Validators.required]),\n    })\n    this.getSavedCards()\n  }\n\n  get topUpAmount() {\n    return this.formGroup.get(\"topUpAmount\");\n  }\n  get creditLimit() {\n    return this.formGroup.get(\"creditLimit\");\n  }\n  get cardId() {\n    return this.formGroup.get(\"cardId\");\n  }\n\n  getSavedCards() {\n    let user = this.loginService.currentUser.value\n    console.log(user)\n    this.savedCards$ = this.apiServices.get('retrieve-stored-card', 'businessId=' + user.userDetails.id).pipe(\n      tap((cards) => \"cards:\" + cards),\n      catchError((err) => {\n        return EMPTY;\n      })\n    );\n  }\n\n  handleFormSubmission(values) {\n    this.btnTxt = 'Please wait...'\n    let payLoad = values;\n    payLoad[\"userId\"] = this.local.userDetails.id\n    this.isError = false\n    if (this.formGroup.valid) {\n      this.apiServices.post('recurring', payLoad).subscribe(res => {\n        this.btnTxt = 'Save'\n        console.log(res)\n        this.router.navigate([\"my-balance\"]);\n      }, error => {\n        this.btnTxt = 'Save'\n        console.log(error)\n      })\n    }\n    else {\n      this.btnTxt = 'Save'\n      this.isError = true;\n    }\n  }\n\n}\n","export default \".card-blue {\\n  background: #1A6AE1 0% 0% no-repeat;\\n  box-shadow: 0px 10px 10px #0000001A;\\n  border-radius: 8px;\\n  opacity: 1;\\n}\\n\\n.heading-title {\\n  color: #FFFFFF;\\n  font-weight: 800;\\n  font-size: 20px;\\n  padding: 25px;\\n  line-height: 30px;\\n  float: left;\\n  width: 50%;\\n}\\n\\n.balance {\\n  padding: 40px 20px;\\n}\\n\\n.title {\\n  padding-left: 20px;\\n}\\n\\nion-grid {\\n  padding: 10px;\\n}\\n\\nion-select {\\n  padding-left: 10px;\\n  padding-right: 8px;\\n  font-size: 14px;\\n}\\n\\nion-label {\\n  font-weight: 400;\\n  font-size: 14px;\\n  text-transform: capitalize;\\n}\\n\\n.txt-wrapper {\\n  padding-left: 6px;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\n.select-wrapper {\\n  border-radius: 4px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\nion-text p {\\n  font-size: 14px;\\n}\\n\\nion-text p {\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY3VycmluZy1wYXltZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNJLG1DQUFBO0VBQ0EsbUNBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7QUFKSjs7QUFPQTtFQUNJLGNBVlU7RUFXVixnQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtBQUpKOztBQU1BO0VBQ0ksa0JBQUE7QUFISjs7QUFLQTtFQUNJLGtCQUFBO0FBRko7O0FBSUE7RUFDSSxhQUFBO0FBREo7O0FBR0E7RUFDSSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUFKOztBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7QUFDSjs7QUFDQTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsMkJBQUE7QUFFSjs7QUFBQTtFQUNJLGtCQUFBO0VBQ0EsMkJBQUE7QUFHSjs7QUFBSTtFQUNJLGVBQUE7QUFHUjs7QUFDSTtFQUNJLGVBQUE7QUFFUiIsImZpbGUiOiJyZWN1cnJpbmctcGF5bWVudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDU1MgRG9jdW1lbnRzXG5cbiRibHVlLWNvbG9yOiAjMUE2QUUxO1xuJHdoaXRlLWNvbG9yOiAjRkZGRkZGO1xuXG4uY2FyZC1ibHVlIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmx1ZS1jb2xvciAwJSAwJSBuby1yZXBlYXQ7XG4gICAgYm94LXNoYWRvdzogMHB4IDEwcHggMTBweCAjMDAwMDAwMUE7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIG9wYWNpdHk6IDE7XG59XG5cbi5oZWFkaW5nLXRpdGxlIHtcbiAgICBjb2xvcjogJHdoaXRlLWNvbG9yO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmc6IDI1cHg7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDUwJTtcbn1cbi5iYWxhbmNlIHtcbiAgICBwYWRkaW5nOiA0MHB4IDIwcHg7XG59XG4udGl0bGUge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbn1cbmlvbi1ncmlkIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuaW9uLXNlbGVjdCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG5pb24tbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuLnR4dC13cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2Q3ZGE5YTtcbn1cbi5zZWxlY3Qtd3JhcHBlciB7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2Q3ZGE5YTtcbn1cbmlvbi10ZXh0IHtcbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbn1cbmlvbi10ZXh0IHtcbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbn0iXX0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-android\\\">\\n      Recurring payment\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\" class=\\\"title-ios\\\">Recurring payment</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-text class=\\\"ion-text-center\\\">\\n          <p>Set up recurring payment when your credit drops below a specified amount </p>\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"handleFormSubmission(formGroup.value)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Recurring payment<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select slot=\\\"start\\\" placeholder=\\\"Select\\\">\\n              <ion-select-option value=\\\"Yes\\\" Selected>Yes</ion-select-option>\\n              <ion-select-option value=\\\"No\\\">No</ion-select-option>\\n            </ion-select>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Saved card<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select *ngIf=\\\"savedCards$ | async as cards\\\" formControlName=\\\"cardId\\\" slot=\\\"start\\\"\\n              placeholder=\\\"Saved cards\\\">\\n              <ion-select-option *ngFor=\\\"let card of cards\\\" [value]=\\\"card.cardId\\\">{{card.cardReference}}\\n              </ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(cardId.invalid &&(cardId.dirty || cardId.touched))|| isError\\\" color=\\\"danger\\\">Select a\\n            card</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Top up credit by <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"topUpAmount\\\" type=\\\"number\\\" placeholder=\\\"£50.00\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(topUpAmount.invalid &&(topUpAmount.dirty || topUpAmount.touched))|| isError\\\"\\n            color=\\\"danger\\\">Top up amount is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>When credit reaches <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"creditLimit\\\" type=\\\"number\\\" placeholder=\\\"£10.00\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(creditLimit.invalid &&(creditLimit.dirty || creditLimit.touched))|| isError\\\"\\n            color=\\\"danger\\\">Amount is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button [disabled]=\\\"btnTxt == 'Please wait...' ? true : false\\\" type=\\\"submit\\\" color=\\\"primary\\\"\\n            expand=\\\"block\\\">\\n            {{btnTxt}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";"]}