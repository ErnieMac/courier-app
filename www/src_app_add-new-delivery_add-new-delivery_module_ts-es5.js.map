{"version":3,"sources":["webpack:///src/app/add-new-delivery/add-new-delivery-routing.module.ts","webpack:///src/app/add-new-delivery/add-new-delivery.module.ts","webpack:///src/app/add-new-delivery/add-new-delivery.page.ts","webpack:///src/app/add-new-delivery/add-new-delivery.page.scss","webpack:///src/app/add-new-delivery/add-new-delivery.page.html"],"names":["routes","path","component","AddNewDeliveryPage","AddNewDeliveryPageRoutingModule","NgModule","imports","RouterModule","exports","AddNewDeliveryPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","apiServices","businessServices","formBuilder","loginService","router","storage","isError","btnTxt","btnDisabled","addressesLoaded$","storageInstance","local","currentUser","value","console","log","formGroup","group","deliveryType","FormControl","Validators","scheduleDate","scheduleTime","dropOffId","pickUpId","parcelSize","jobType","estimatedCost","estimatedDistance","jobDescription","getAddresses","get","user","addresses","unsavedAddress","userDetails","id","subscribe","res","forEach","address","push","pickUpAddress$","of","filter","type","dropOffAddress$","event","dropOffAddresses","dropOff","pickUpAddresses","pickUp","selected","selectedDOA$","selectedPU","selectedPUA$","valid","loading","data","postcode","post","patchValue","error","values","payLoad","convertToDateTime","navigate","message","pickUpDate","timeString","unix_timestamp","date","Date","pickupDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedTime","substr","dateTime","getFullYear","getMonth","getDate","ApiCallsService","BusinessBookingService","FormBuilder","LoginService","Router","Storage","Component","selector","template"],"mappings":"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","file":"src_app_add-new-delivery_add-new-delivery_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddNewDeliveryPage } from './add-new-delivery.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddNewDeliveryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddNewDeliveryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddNewDeliveryPageRoutingModule } from './add-new-delivery-routing.module';\n\nimport { AddNewDeliveryPage } from './add-new-delivery.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AddNewDeliveryPageRoutingModule\n  ],\n  declarations: [AddNewDeliveryPage]\n})\nexport class AddNewDeliveryPageModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BusinessBookingService } from '../services/business-booking.service';\nimport { ApiCallsService } from '../services/api-calls.service';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { Observable, EMPTY, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { Storage } from '@ionic/storage-angular';\n\n@Component({\n  selector: 'app-add-new-delivery',\n  templateUrl: './add-new-delivery.page.html',\n  styleUrls: ['./add-new-delivery.page.scss'],\n})\nexport class AddNewDeliveryPage implements OnInit {\n  formGroup: FormGroup\n  isError: boolean = false\n  btnTxt = 'Add Delivery'\n  pickUpAddress$: Observable<any>\n  dropOffAddress$: Observable<any>\n  selectedDOA$: Observable<any>\n  selectedPUA$: Observable<any>\n  savedCards$: Observable<any>\n  btnDisabled = true;\n\n  loading: Observable<boolean>\n  addressesLoaded$ = false;\n  public storageInstance = null;\n  local = this.loginService.currentUser.value\n  constructor(\n    private apiServices: ApiCallsService,\n    private businessServices: BusinessBookingService,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n    private storage: Storage\n  ) {\n    console.log(this.local)\n  }\n\n  async ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      deliveryType: new FormControl(\"\", [Validators.required]),\n      scheduleDate: new FormControl(\"\", [Validators.required]),\n      scheduleTime: new FormControl(\"\", [Validators.required]),\n      dropOffId: new FormControl(\"\", [Validators.required]),\n      pickUpId: new FormControl(\"\", [Validators.required]),\n      parcelSize: new FormControl(\"\", [Validators.required]),\n      jobType: new FormControl(\"\", [Validators.required]),\n      estimatedCost: new FormControl(\"\"),\n      estimatedDistance: new FormControl(\"\"),\n      jobDescription: new FormControl(\"\"),\n    })\n    this.addressesLoaded$ = false\n\n  }\n\n  ionViewWillLeave() {\n    this.addressesLoaded$ = false\n  }\n\n  ionViewWillEnter() {\n    this.getAddresses()\n  }\n\n  get deliveryType() {\n    return this.formGroup.get(\"deliveryType\");\n  }\n  get scheduleDate() {\n    return this.formGroup.get(\"scheduleDate\");\n  }\n  get scheduleTime() {\n    return this.formGroup.get(\"scheduleTime\");\n  }\n  get dropOffId() {\n    return this.formGroup.get(\"dropOffId\");\n  }\n  get pickUpId() {\n    return this.formGroup.get(\"pickUpId\");\n  }\n  get parcelSize() {\n    return this.formGroup.get(\"parcelSize\");\n  }\n  get jobType() {\n    return this.formGroup.get(\"jobType\");\n  }\n  get estimatedCost() {\n    return this.formGroup.get(\"estimatedCost\");\n  }\n  get estimatedDistance() {\n    return this.formGroup.get(\"estimatedDistance\");\n  }\n  // get mediaType() {\n  //   return this.formGroup.get(\"mediaType\");\n  // }\n  // get browserType() {\n  //   return this.formGroup.get(\"browserType\");\n  // }\n  // get deliverySkillSet() {\n  //   return this.formGroup.get(\"deliverySkillSet\");\n  // }\n  // get cashRequired() {\n  //   return this.formGroup.get(\"cashRequired\");\n  // }\n  // get jobDescription() {\n  //   return this.formGroup.get(\"jobDescription\");\n  // }\n\n  async getAddresses() {\n    let user = this.loginService.currentUser.value\n    let addresses = null\n\n    // const storageInstance = await this.storage.create();\n    const unsavedAddress = await this.storage.get('unsaved-addresses')\n    this.apiServices.get('store-address', 'businessId=' + user.userDetails.id).subscribe(res => {\n      addresses = res\n      if (unsavedAddress) {\n        unsavedAddress.forEach(address => {\n          addresses.push(address)\n        })\n      }\n      console.log(addresses)\n      this.pickUpAddress$ = of(addresses.filter(address => address.type == 'Pick Up Only' || address.type == 'Both'))\n      this.dropOffAddress$ = of(addresses.filter(address => address.type == 'Drop Off Only' || address.type == 'Both'))\n      this.addressesLoaded$ = true\n    })\n  }\n\n  handleonChange(event) {\n    this.btnDisabled = true;\n    let dropOffAddresses = null;\n    this.dropOffAddress$.subscribe(res => {\n      dropOffAddresses = res\n    })\n    let dropOff = dropOffAddresses.filter(address => address.id == this.formGroup.get('dropOffId').value)\n\n    let pickUpAddresses = null;\n    this.pickUpAddress$.subscribe(res => {\n      pickUpAddresses = res\n    })\n    let pickUp = pickUpAddresses.filter(address => address.id == this.formGroup.get('pickUpId').value)\n    dropOff = dropOff[0]\n    pickUp = pickUp[0]\n\n    let selected = dropOffAddresses.filter(address => address.id == this.formGroup.get('dropOffId').value)\n    this.selectedDOA$ = of(selected[0])\n\n    let selectedPU = pickUpAddresses.filter(address => address.id == this.formGroup.get('pickUpId').value)\n    this.selectedPUA$ = of(selectedPU[0])\n\n    if (this.formGroup.valid) {\n      this.loading = of(true)\n      let data = {\n        \"userId\": this.local.userDetails.id,\n        \"parcelSize\": this.formGroup.get('parcelSize').value,\n        \"dropOffDetails\": {\n          \"postcode\": dropOff.postcode,\n        },\n        \"pickUpDetails\": {\n          \"postcode\": pickUp.postcode,\n        }\n      }\n      console.log(data)\n      this.businessServices.post('estimate-price', data).subscribe(res => {\n        console.log(res)\n        this.formGroup.patchValue({\n          estimatedCost: res.estimatedCost,\n          estimatedDistance: res.estimatedDistance\n        })\n        this.loading = of(false)\n        this.btnDisabled = false;\n      }, error => {\n        console.log(error)\n        this.loading = of(false)\n      })\n      console.log(data)\n    }\n  }\n\n  handleFormSubmission(values) {\n    this.btnTxt = 'Please wait...'\n    let payLoad = values;\n    payLoad[\"businessId\"] = this.local.userDetails.id\n    let dropOffAddresses = null;\n    this.dropOffAddress$.subscribe(res => {\n      dropOffAddresses = res\n    })\n    let dropOff = dropOffAddresses.filter(address => address.id == values.dropOffId)\n    delete dropOff[0]['id']\n    delete dropOff[0]['addressIdentifierName']\n    delete dropOff[0]['userId']\n    delete dropOff[0]['type']\n    dropOff[0]['email'] = 'some@some.com'\n    dropOff[0]['showAddress'] = true\n    dropOff[0]['county'] = dropOff[0]['county']\n    dropOff[0]['intcode'] = dropOff[0]['country']\n    dropOff[0]['country'] = \"England\"\n    payLoad['dropOffDetails'] = dropOff[0]\n    payLoad['dropOffId'] = null;\n    payLoad['status'] = 'available';\n\n\n\n    let pickUpAddresses = null;\n    this.pickUpAddress$.subscribe(res => {\n      pickUpAddresses = res\n    })\n    let pickUp = pickUpAddresses.filter(address => address.id == values.pickUpId)\n    delete pickUp[0]['id']\n    delete pickUp[0]['addressIdentifierName']\n    delete pickUp[0]['userId']\n    delete pickUp[0]['type']\n    pickUp[0]['email'] = 'some@some.com'\n    pickUp[0]['showAddress'] = true\n    pickUp[0]['county'] = pickUp[0]['county']\n    pickUp[0]['intcode'] = pickUp[0]['country']\n    pickUp[0]['country'] = \"England\"\n    payLoad['scheduleTime'] = this.convertToDateTime(values.scheduleDate, values.scheduleTime)\n    console.log(payLoad['scheduleTime'])\n    payLoad['pickUpDetails'] = pickUp[0]\n    payLoad['pickUpId'] = null;\n    //If delivery add secure code\n    if (values.deliveryType == 'delivery') {\n      payLoad['requestSecureCode'] = true;\n    } else {\n      payLoad['requestSecureCode'] = false;\n    }\n    //Jobtype should determine the delivery skillset required\n    //jobDescription should be pulled from the form\n    //------------------------------------------------------------------------------------------------------\n    payLoad['additionalDetails'] = {\n      \"parcelSize\": values.parcelSize,\n      \"jobType\": values.jobType,\n      \"mediaType\": \"app\",\n      \"browserType\": \"ionic\",\n      \"deliverySkillSet\": [values.jobType],\n      \"cashRequired\": false,\n      \"jobDescription\": values.jobDescription\n    }\n    console.log(payLoad)\n    delete payLoad['parcelSize']\n    delete payLoad['jobType']\n    delete payLoad['jobDescription']\n    delete payLoad['scheduleDate']\n    delete payLoad['estimatedCost']\n    delete payLoad['estimatedDistance']\n    delete payLoad['dropOffDetails']['intCode']\n    delete payLoad['pickUpDetails']['intCode']\n    this.isError = false\n    // payLoad = {\n    //   \"businessId\": \"B200013\",\n    //   \"requestSecureCode\": false,\n    //   \"deliveryType\": \"delivery\",\n    //   \"scheduleTime\": \"2021-11-1 14:18:18\",\n    //   \"dropOffId\": null,\n    //   \"dropOffDetails\": {\n    //     \"name\": \"John Smith\",\n    //     \"email\": \"john@smith.com\",\n    //     \"number\": \"077777777777\",\n    //     \"addressLineOne\": \"14 Tiger Ln\",\n    //     \"addressLineTwo\": \"\",\n    //     \"county\": \"Bromley\",\n    //     \"country\": \"England\",\n    //     \"postcode\": \"BR2 9JG\",\n    //     \"additionalNotes\": \"\",\n    //     \"showAddress\": true\n    //   },\n    //   \"pickUpId\": null,\n    //   \"pickUpDetails\": {\n    //     \"name\": \"Test comapny\",\n    //     \"email\": \"blue@smith.com\",\n    //     \"number\": \"077777777772\",\n    //     \"addressLineOne\": \"6 St Mark's Square\",\n    //     \"addressLineTwo\": \"\",\n    //     \"county\": \"Bromley\",\n    //     \"country\": \"England\",\n    //     \"postcode\": \"BR2 9UY\",\n    //     \"additionalNotes\": \"\",\n    //     \"showAddress\": true\n    //   },\n    //   \"additionalDetails\": {\n    //     \"parcelSize\": \"m\",\n    //     \"jobType\": \"food\",\n    //     \"mediaType\": \"Portal\",\n    //     \"browserType\": \"Chrome\",\n    //     \"deliverySkillSet\": [\"food\"],\n    //     \"cashRequired\": false,\n    //     \"jobDescription\": \"This is the job description\"\n    //   }\n    // }\n    if (this.formGroup.valid) {\n      this.businessServices.post('create-job', payLoad).subscribe(res => {\n        this.btnTxt = 'Add Delivery'\n        console.log(res)\n        this.router.navigate([\"business-dashboard\"]);\n      }, error => {\n        this.btnTxt = 'Add Delivery'\n        console.log(error.error.message)\n        console.log(error)\n      })\n    }\n    else {\n      this.btnTxt = 'Add Delivery'\n      this.isError = true;\n    }\n  }\n\n  convertToDateTime(pickUpDate, timeString) {\n    let unix_timestamp = timeString\n    var date = new Date(unix_timestamp);\n    var pickupDate = new Date(pickUpDate)\n    // alert(pickupDate.getFullYear())\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var seconds = \"0\" + date.getSeconds();\n    var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    var dateTime = pickupDate.getFullYear() + '-' + (pickupDate.getMonth() + 1) + '-' + pickupDate.getDate() + ' ' + formattedTime;\n    return dateTime;\n  }\n\n}\n","export default \"ion-grid {\\n  padding: 10px;\\n}\\n\\n.blue {\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  color: #1A6AE1;\\n  padding: 10px;\\n}\\n\\n.orange {\\n  color: #F45A2A;\\n  font-weight: 600;\\n  padding: 10px;\\n  text-transform: uppercase;\\n}\\n\\n.add-new {\\n  text-align: right;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-end;\\n}\\n\\n.add-new ion-chip {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\na.ion-text-left {\\n  text-decoration: none;\\n  color: #1A6AE1;\\n  font-weight: 800;\\n  font-size: 12px;\\n  float: right;\\n}\\n\\nion-select {\\n  padding-left: 10px;\\n  padding-right: 8px;\\n  font-size: 14px;\\n}\\n\\nion-datetime {\\n  padding-left: 10px;\\n}\\n\\nion-label {\\n  font-weight: 400;\\n  font-size: 14px;\\n  text-transform: capitalize;\\n}\\n\\nion-datetime {\\n  font-size: 14px;\\n}\\n\\nion-textarea {\\n  font-size: 14px;\\n}\\n\\n.txt-wrapper {\\n  padding-left: 6px;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\n.rounded {\\n  border-radius: 8px;\\n  font-size: 20px;\\n  font-weight: 800;\\n  text-align: center;\\n  color: #1A6AE1;\\n  border: 2px solid #2af0b4;\\n  box-shadow: 0px 8px 8px #0000001A;\\n}\\n\\n.select-wrapper {\\n  border-radius: 4px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\n.loading-estimate {\\n  position: fixed;\\n  z-index: 1;\\n  top: 0;\\n  width: 100%;\\n  margin: 0 auto;\\n  background: #ffffff17;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.loading-estimate span {\\n  font-size: 14px;\\n  font-weight: 400;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1uZXctZGVsaXZlcnkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BO0VBQ0ksYUFBQTtBQUxKOztBQU9BO0VBQ0ksZ0JBQUE7RUFDQSx5QkFBQTtFQUNBLGNBWFM7RUFZVCxhQUFBO0FBSko7O0FBTUE7RUFDSSxjQWRXO0VBZVgsZ0JBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7QUFISjs7QUFLQTtFQUNJLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7QUFGSjs7QUFJSTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtBQUZSOztBQU1BO0VBQ0kscUJBQUE7RUFDQSxjQWxDUztFQW1DVCxnQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0FBSEo7O0FBS0E7RUFDSSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUZKOztBQUlBO0VBQ0ksa0JBQUE7QUFESjs7QUFHQTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLDBCQUFBO0FBQUo7O0FBRUE7RUFDSSxlQUFBO0FBQ0o7O0FBQ0E7RUFDSSxlQUFBO0FBRUo7O0FBQUE7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLDJCQUFBO0FBR0o7O0FBREE7RUFDSSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FyRVM7RUFzRVQseUJBQUE7RUFDQSxpQ0FBQTtBQUlKOztBQURBO0VBQ0ksa0JBQUE7RUFDQSwyQkFBQTtBQUlKOztBQUZBO0VBQ0ksZUFBQTtFQUNBLFVBQUE7RUFDQSxNQUFBO0VBQ0EsV0FBQTtFQUNBLGNBQUE7RUFFQSxxQkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBSUo7O0FBRlE7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7QUFJWiIsImZpbGUiOiJhZGQtbmV3LWRlbGl2ZXJ5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENTUyBEb2N1bWVudHNcbiRibHVlLWNvbG9yOiAjMUE2QUUxO1xuJG9yYW5nZS1jb2xvcjogI0Y0NUEyQTtcbiR3aGl0ZS1jb2xvcjogI0ZGRkZGRjtcbiRncmVlbi1jb2xvcjogIzJhZjBiNDtcblxuaW9uLWdyaWQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG4uYmx1ZSB7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAkYmx1ZS1jb2xvcjtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuLm9yYW5nZSB7XG4gICAgY29sb3I6ICRvcmFuZ2UtY29sb3I7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG4uYWRkLW5ldyB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG5cbiAgICBpb24tY2hpcCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB9XG59XG5cbmEuaW9uLXRleHQtbGVmdHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6ICRibHVlLWNvbG9yO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGZsb2F0OiByaWdodDtcbn1cbmlvbi1zZWxlY3Qge1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA4cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuaW9uLWRhdGV0aW1lIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG5pb24tbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuaW9uLWRhdGV0aW1lIHtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG5pb24tdGV4dGFyZWEge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbi50eHQtd3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiA2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkN2RhOWE7XG59XG4ucm91bmRlZCB7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogODAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogJGJsdWUtY29sb3I7XG4gICAgYm9yZGVyOiAycHggc29saWQgJGdyZWVuLWNvbG9yO1xuICAgIGJveC1zaGFkb3c6IDBweCA4cHggOHB4ICMwMDAwMDAxQTtcbiAgICAvLyBiYWNrZ3JvdW5kOiAkZ3JlZW4tY29sb3I7XG59XG4uc2VsZWN0LXdyYXBwZXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkN2RhOWE7XG59XG4ubG9hZGluZy1lc3RpbWF0ZSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IDE7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIC8vIGhlaWdodDogMTAwdmg7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjE3O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgZm9udC1zaXplOjE0cHg7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICB9XG59Il19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-android\\\">\\n      Add new delivery\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\" class=\\\"title-ios\\\">Add new delivery</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-grid class=\\\"loading-estimate\\\" *ngIf=\\\"!addressesLoaded$\\\">\\n    <ion-row>\\n      <ion-col>\\n        <span>Loading, Please wait...</span>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-grid class=\\\"loading-estimate\\\" *ngIf=\\\"loading | async\\\">\\n    <ion-row>\\n      <ion-col>\\n        <span>Estimating, Please wait...</span>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"handleFormSubmission(formGroup.value)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"7\\\">\\n          <ion-label>Pick up address <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"pickUpId\\\" slot=\\\"start\\\"\\n              *ngIf=\\\"pickUpAddress$ | async as addresses\\\" placeholder=\\\"Select\\\">\\n              <ion-select-option *ngFor=\\\"let address of addresses\\\" data-pickupAddress=\\\"Pickup 1\\\" [value]=\\\"address.id\\\">\\n                {{address.addressIdentifierName}}\\n              </ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(pickUpId.invalid &&(pickUpId.dirty || pickUpId.touched))|| isError\\\" color=\\\"danger\\\">Select Pick up address</ion-label>\\n        </ion-col>\\n\\n        <ion-col size=\\\"5\\\" class=\\\"add-new\\\">\\n          <ion-chip color=\\\"primary\\\" [routerLink]=\\\"['/add-new-address']\\\">\\n            <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n            <ion-label>Add New</ion-label>\\n          </ion-chip>\\n        </ion-col>\\n\\n        <ion-col>\\n          <ion-chip color=\\\"primary\\\" class=\\\"selected-address\\\" *ngIf=\\\"selectedPUA$ | async as address\\\">\\n            <ion-label>{{address.addressLineOne}} {{address.addressLineTwo}} {{address.postcode}}</ion-label>\\n          </ion-chip>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col size=\\\"7\\\">\\n          <ion-label>Drop off address <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"dropOffId\\\" slot=\\\"start\\\"\\n              *ngIf=\\\"dropOffAddress$ | async as addresses\\\" placeholder=\\\"Select\\\">\\n              <ion-select-option *ngFor=\\\"let address of addresses\\\" data-pickupAddress=\\\"Pickup 1\\\" [value]=\\\"address.id\\\">\\n                {{address.addressIdentifierName}}\\n              </ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(dropOffId.invalid &&(dropOffId.dirty || dropOffId.touched))|| isError\\\" color=\\\"danger\\\">Select Drop off address</ion-label>\\n        </ion-col>\\n\\n        <ion-col size=\\\"5\\\" class=\\\"add-new\\\">\\n          <ion-chip color=\\\"secondary\\\" [routerLink]=\\\"['/add-new-address']\\\">\\n            <ion-icon name=\\\"add-circle\\\"></ion-icon>\\n            <ion-label>Add New</ion-label>\\n          </ion-chip>\\n        </ion-col>\\n\\n        <ion-col class=\\\"orange\\\">\\n          <ion-chip color=\\\"secondary\\\" class=\\\"selected-address\\\" *ngIf=\\\"selectedDOA$ | async as address\\\">\\n            <ion-label>{{address.addressLineOne}} {{address.addressLineTwo}} {{address.postcode}}</ion-label>\\n          </ion-chip>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Pick up date <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-datetime (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"scheduleDate\\\" value=\\\"1990-02-19\\\" displayFormat=\\\"DD-MMM-YYYY\\\" placeholder=\\\"Choose Date\\\"></ion-datetime>\\n          </div>\\n          <ion-label *ngIf=\\\"(scheduleDate.invalid &&(scheduleDate.dirty || scheduleDate.touched))|| isError\\\" color=\\\"danger\\\">Choose Pick up date</ion-label>\\n        </ion-col>\\n      <!-- </ion-row>\\n\\n      <ion-row> -->\\n        <ion-col>\\n          <ion-label>Pick up time <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-datetime (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"scheduleTime\\\" display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" placeholder=\\\"Choose time\\\"></ion-datetime>\\n          </div>\\n          <ion-label *ngIf=\\\"(scheduleTime.invalid &&(scheduleTime.dirty || scheduleTime.touched))|| isError\\\" color=\\\"danger\\\">Choose Pick up time</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Delivery type <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"deliveryType\\\" slot=\\\"start\\\"\\n              placeholder=\\\"Select type\\\">\\n              <ion-select-option data-deliveryType=\\\"delivery\\\" value=\\\"delivery\\\">Delivery</ion-select-option>\\n              <ion-select-option data-deliveryType=\\\"pick up\\\" value=\\\"pick up\\\">Pick up</ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(deliveryType.invalid &&(deliveryType.dirty || deliveryType.touched))|| isError\\\"\\n            color=\\\"danger\\\">Select Delivery type</ion-label>\\n        </ion-col>\\n\\n        <ion-col>\\n          <ion-label>Package type <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"jobType\\\" slot=\\\"start\\\"\\n              placeholder=\\\"Package type\\\">\\n              <ion-select-option data-packageType=\\\"food\\\" value=\\\"food\\\">Food</ion-select-option>\\n              <ion-select-option data-packageType=\\\"package\\\" value=\\\"package\\\">Package</ion-select-option>\\n              <ion-select-option data-packageType=\\\"groceries\\\" value=\\\"groceries\\\">Groceries</ion-select-option>\\n              <ion-select-option data-packageType=\\\"letter\\\" value=\\\"letter\\\">Letter</ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(jobType.invalid &&(jobType.dirty || jobType.touched))|| isError\\\" color=\\\"danger\\\">Select Package type</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Package size <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select (ionChange)=\\\"handleonChange($event)\\\" formControlName=\\\"parcelSize\\\" slot=\\\"start\\\"\\n              placeholder=\\\"Package size\\\">\\n              <ion-select-option data-packageSize=\\\"Extra small\\\" value=\\\"xs\\\">XS - Bicycle/Motorbike</ion-select-option>\\n              <ion-select-option data-packageSize=\\\"Small\\\" value=\\\"s\\\">S - Bicycle/Motorbike</ion-select-option>\\n              <ion-select-option data-packageSize=\\\"Medium\\\" value=\\\"m\\\">M - Bicycle/Motorbike/Car</ion-select-option>\\n              <ion-select-option data-packageSize=\\\"Large\\\" value=\\\"l\\\">L - Car</ion-select-option>\\n              <ion-select-option data-packageSize=\\\"Extra Large\\\" value=\\\"xl\\\">XL - Small van</ion-select-option>\\n              <ion-select-option data-packageSize=\\\"Extra Extra Large\\\" value=\\\"xxl\\\">XXL - Large van\\n              </ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(parcelSize.invalid &&(parcelSize.dirty || parcelSize.touched))|| isError\\\" color=\\\"danger\\\">Select Package size</ion-label>\\n        </ion-col>\\n      </ion-row>\\n      \\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Delivery notes </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-textarea formControlName=\\\"jobDescription\\\" placeholder=\\\"Enter any delivery notes here...\\\">\\n            </ion-textarea>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Delivery distance </ion-label>\\n          <div class=\\\"txt-wrapper rounded\\\">\\n            <ion-input formControlName=\\\"estimatedDistance\\\" value=\\\"2.4km\\\" readonly></ion-input>\\n          </div>\\n        </ion-col>\\n\\n        <ion-col>\\n          <ion-label>Delivery cost </ion-label>\\n          <div class=\\\"txt-wrapper rounded\\\" color=\\\"secondary\\\">\\n            <ion-input formControlName=\\\"estimatedCost\\\" value=\\\"£25.50\\\" readonly></ion-input>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button [disabled]=\\\"btnTxt == 'Please wait...' || btnDisabled ? true : false\\\" type=\\\"submit\\\" color=\\\"primary\\\"\\n            expand=\\\"block\\\">\\n            {{btnTxt}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";"]}