{"version":3,"sources":["webpack:///src/app/transaction-history/transaction-history-routing.module.ts","webpack:///src/app/transaction-history/transaction-history.module.ts","webpack:///src/app/transaction-history/transaction-history.page.ts","webpack:///src/app/transaction-history/transaction-history.page.scss","webpack:///src/app/transaction-history/transaction-history.page.html"],"names":["routes","path","component","TransactionHistoryPage","TransactionHistoryPageRoutingModule","NgModule","imports","RouterModule","exports","TransactionHistoryPageModule","CommonModule","FormsModule","IonicModule","declarations","apiServices","loginService","local","currentUser","value","getTransactions","user","transactions$","get","userDetails","id","pipe","tap","transaction","reverse","catchError","err","EMPTY","BusinessPaymentService","LoginService","Component","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE,uDAAAC;AAFb,OADqB,CAAvB;;UAWaC,oCAAmC;AAAA;AAAA,O;;AAAnCA,0CAAmC,uDAJ/C,+CAAAC,QAAA,EAAS;AACRC,eAAO,EAAE,CAAC,6CAAAC,YAAA,UAAsBP,MAAtB,CAAD,CADD;AAERQ,eAAO,EAAE,CAAC,6CAAAD,YAAD;AAFD,OAAT,CAI+C,GAAnCH,oCAAmC,CAAnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAK,6BAA4B;AAAA;AAAA,O;;AAA5BA,mCAA4B,uDATxC,+CAAAJ,QAAA,EAAS;AACRC,eAAO,EAAE,CACP,6CAAAI,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,WAHO,EAIP,iEAAAR,mCAJO,CADD;AAORS,oBAAY,EAAE,CAAC,uDAAAV,sBAAD;AAPN,OAAT,CASwC,GAA5BM,6BAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAN,uBAAsB;AAIjC,wCACUW,WADV,EAEUC,YAFV,EAEoC;AAAA;;AAD1B,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,YAAA,GAAAA,YAAA;AAHV,eAAAC,KAAA,GAAQ,KAAKD,YAAL,CAAkBE,WAAlB,CAA8BC,KAAtC;AAIK;;AAP4B;AAAA;AAAA,iBASjC,oBAAW;AACT,iBAAKC,eAAL;AACD;AAXgC;AAAA;AAAA,iBAajC,2BAAkB;AAChB,gBAAIC,IAAI,GAAG,KAAKL,YAAL,CAAkBE,WAAlB,CAA8BC,KAAzC;AACA,iBAAKG,aAAL,GAAqB,KAAKP,WAAL,CAAiBQ,GAAjB,CAAqB,cAArB,EAAqC,QAAQF,IAAI,CAACG,WAAL,CAAiBC,EAA9D,EAAkEC,IAAlE,CACnB,gDAAAC,GAAA,EAAI,UAACC,WAAD;AAAA,qBAAiB,iBAAiBA,WAAW,CAACC,OAAZ,EAAlC;AAAA,aAAJ,CADmB,EAEnB,gDAAAC,UAAA,EAAW,UAACC,GAAD,EAAS;AAClB,qBAAO,kCAAAC,KAAP;AACD,aAFD,CAFmB,CAArB;AAMD;AArBgC;;AAAA;AAAA,S;;;;gBAX1B,gEAAAC;;gBACA,qDAAAC;;;;AAUI9B,6BAAsB,uDALlC,+CAAA+B,SAAA,EAAU;AACTC,gBAAQ,EAAE,yBADD;AAETC,gBAAQ,EAAR,iFAFS;;AAAA,OAAV,CAKkC,GAAtBjC,uBAAsB,CAAtB;;;;;;;;;ACZb;;;AAAA,uCAAe,moBAAf;;;;;;;;;ACAA;;;AAAA,uCAAe,8pDAAf","file":"src_app_transaction-history_transaction-history_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionHistoryPage } from './transaction-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionHistoryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TransactionHistoryPageRoutingModule } from './transaction-history-routing.module';\n\nimport { TransactionHistoryPage } from './transaction-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TransactionHistoryPageRoutingModule\n  ],\n  declarations: [TransactionHistoryPage]\n})\nexport class TransactionHistoryPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { BusinessPaymentService } from '../services/business-payment.service';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-transaction-history',\n  templateUrl: './transaction-history.page.html',\n  styleUrls: ['./transaction-history.page.scss'],\n})\nexport class TransactionHistoryPage implements OnInit {\n  account$: Observable<any>\n  transactions$: Observable<any>\n  local = this.loginService.currentUser.value\n  constructor(\n    private apiServices: BusinessPaymentService,\n    private loginService: LoginService,\n  ) { }\n\n  ngOnInit() {\n    this.getTransactions()\n  }\n\n  getTransactions() {\n    let user = this.loginService.currentUser.value\n    this.transactions$ = this.apiServices.get('retrieve-all', 'id=' + user.userDetails.id).pipe(\n      tap((transaction) => \"transaction:\" + transaction.reverse()),\n      catchError((err) => {\n        return EMPTY;\n      })\n    );\n  }\n\n}\n","export default \".status {\\n  color: #1A6AE1;\\n  font-weight: 600;\\n}\\n\\nion-label h3 {\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9uLWhpc3RvcnkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBO0VBQ0ksY0FIUztFQUlULGdCQUFBO0FBSko7O0FBTUE7RUFDSSxnQkFBQTtBQUhKIiwiZmlsZSI6InRyYW5zYWN0aW9uLWhpc3RvcnkucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ1NTIERvY3VtZW50c1xuXG4kb3JhbmdlLWNvbG9yOiAjRjQ1QTJBO1xuJGJsdWUtY29sb3I6ICMxQTZBRTE7XG5cbi5zdGF0dXMge1xuICAgIGNvbG9yOiAkYmx1ZS1jb2xvcjtcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuaW9uLWxhYmVsIGgzIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xufSJdfQ== */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-android\\\">\\n      Transaction\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\" class=\\\"title-ios\\\">Transaction</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-segment value=\\\"Transactions\\\">\\n          <ion-segment-button value=\\\"My credit\\\" [routerLink]=\\\"['/my-balance']\\\">\\n            <ion-label>My credit</ion-label>\\n          </ion-segment-button>\\n    \\n          <ion-segment-button value=\\\"Top up\\\" [routerLink]=\\\"['/top-up']\\\">\\n            <ion-label>Top up</ion-label>\\n          </ion-segment-button>\\n    \\n          <ion-segment-button value=\\\"Transactions\\\" [routerLink]=\\\"['/transaction-history']\\\">\\n            <ion-label>Transactions</ion-label>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-list *ngIf=\\\"transactions$ | async as transactions\\\">\\n    <ion-item *ngFor=\\\"let transaction of transactions\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"assets/avatar.svg\\\">\\n      </ion-avatar>\\n\\n      <ion-label>\\n        <h3></h3>\\n        <p>{{transaction.timeStamp | date:'d MMM yyyy' }}</p>\\n        <small class=\\\"status\\\" color=\\\"primary\\\">Payment </small>\\n      </ion-label>\\n\\n      <ion-badge slot=\\\"end\\\" color=\\\"primary\\\">Â£{{transaction.amount}}</ion-badge>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";"]}