{"version":3,"sources":["webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.html"],"names":["routes","path","component","LoginPage","LoginPageRoutingModule","NgModule","imports","RouterModule","exports","LoginPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","declarations","auth","apiServices","formBuilder","toastController","router","loginService","isError","loginForm","group","email","FormControl","Validators","password","get","formValues","valid","console","log","post","subscribe","res","handleLogin","error","create","message","duration","position","color","toast","present","response","createStorage","storageInstance","set","currentUser","next","userDetails","firstname","lastname","verifiedMobileNumber","navigate","AuthGuard","ApiCallsService","FormBuilder","ToastController","Router","LoginService","Component","selector","template"],"mappings":"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","file":"src_app_login_login_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthGuard } from '../helper/auth.guard';\nimport { ApiCallsService } from '../services/api-calls.service';\nimport { ToastController } from \"@ionic/angular\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { LoginService } from '../services/login.service'\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  constructor(\n    private auth: AuthGuard,\n    private apiServices: ApiCallsService,\n    private formBuilder: FormBuilder,\n    private toastController: ToastController,\n    private router: Router,\n    private loginService: LoginService) { }\n  loginForm: FormGroup\n  isError: boolean = false\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required]),\n    })\n\n  }\n\n  get email() {\n    return this.loginForm.get(\"email\");\n  }\n  get password() {\n    return this.loginForm.get(\"password\");\n  }\n\n  handleFormSubmission(formValues) {\n    if (this.loginForm.valid) {\n      this.isError = false;\n      console.log(formValues)\n      this.apiServices.post('login', formValues).subscribe(res => {\n        console.log(res)\n        this.handleLogin(res)\n      }, async error => {\n        const toast = await this.toastController.create({\n          message: error.error.message,\n          duration: 3000,\n          position: 'bottom',\n          color: 'danger'\n        });\n        toast.present();\n      })\n    }\n    else {\n      this.isError = true;\n      console.log('All Fields Are Required')\n    }\n  }\n\n  async handleLogin(response) {\n    await this.loginService.createStorage()\n    await this.loginService.storageInstance.set('loggedIn', true)\n    await this.loginService.storageInstance.set('userDetails', response)\n    this.loginService.currentUser.next(response)\n    const toast = await this.toastController.create({\n      message: `Welcome ${response.userDetails.firstname} ${response.userDetails.lastname}`,\n      duration: 2000,\n      position: 'bottom',\n      color: 'primary'\n    });\n    toast.present();\n    if (response.userDetails.verifiedMobileNumber == false) {\n      this.router.navigate([\"phone-verification\"]);\n    }\n    if (response.userDetails.verifiedMobileNumber == true) {\n      this.router.navigate([\"business-dashboard\"]);\n    }\n  }\n\n}\n","export default \"ion-grid {\\n  padding: 10px;\\n}\\n\\nion-label {\\n  font-weight: 400;\\n  font-size: 14px;\\n}\\n\\n.txt-wrapper {\\n  padding-left: 6px;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\n.ion-text-center {\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESjs7QUFHQTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtBQUFKOztBQUVBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSwyQkFBQTtBQUNKOztBQUNBO0VBQ0ksZUFBQTtBQUVKIiwiZmlsZSI6ImxvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENTUyBEb2N1bWVudHNcblxuaW9uLWdyaWQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5pb24tbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuLnR4dC13cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2Q3ZGE5YTtcbn1cbi5pb24tdGV4dC1jZW50ZXIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn0iXX0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-android\\\">\\n      Please login\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\" class=\\\"title-ios\\\">Please login</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"handleFormSubmission(loginForm.value)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Email <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"John.doe@email.com\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(email.invalid &&(email.dirty || email.touched))|| isError\\\" color=\\\"danger\\\">Enter a valid\\n            email</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Password <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"***********\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(password.invalid &&(password.dirty || password.touched))|| isError\\\" color=\\\"danger\\\">Password\\n            is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\">Login</ion-button>\\n          <p class=\\\"ion-text-center\\\"><a [routerLink]=\\\"['/reset-password']\\\"><b>Forgot your password?</b></a></p>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n\\n  <p class=\\\"ion-text-center\\\">Don’t have an account?<br> <a [routerLink]=\\\"['/create-account']\\\"><b>Create an account</b></a>\\n  </p>\\n</ion-content>\";"]}