{"version":3,"sources":["webpack:///src/app/add-card/add-card-routing.module.ts","webpack:///src/app/add-card/add-card.module.ts","webpack:///src/app/add-card/add-card.page.ts","webpack:///src/app/add-card/add-card.page.scss","webpack:///src/app/add-card/add-card.page.html"],"names":["routes","path","component","AddCardPage","AddCardPageRoutingModule","NgModule","imports","RouterModule","exports","AddCardPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","declarations","apiServices","formBuilder","loginService","router","isError","btnTxt","local","currentUser","value","formGroup","group","cardReference","FormControl","Validators","cardNumber","cardHolderName","expiraryDate","cvv","get","values","payLoad","console","log","userDetails","id","valid","post","subscribe","res","navigate","error","BusinessPaymentService","FormBuilder","LoginService","Router","Component","selector","template"],"mappings":"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","file":"src_app_add-card_add-card_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddCardPage } from './add-card.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddCardPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddCardPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddCardPageRoutingModule } from './add-card-routing.module';\n\nimport { AddCardPage } from './add-card.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AddCardPageRoutingModule\n  ],\n  declarations: [AddCardPage]\n})\nexport class AddCardPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BusinessPaymentService } from '../services/business-payment.service';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-add-card',\n  templateUrl: './add-card.page.html',\n  styleUrls: ['./add-card.page.scss'],\n})\nexport class AddCardPage implements OnInit {\n  formGroup: FormGroup\n  isError: boolean = false\n  btnTxt = 'Add card'\n  local = this.loginService.currentUser.value\n  constructor(\n    private apiServices: BusinessPaymentService,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      cardReference: new FormControl(\"\", [Validators.required]),\n      cardNumber: new FormControl(\"\", [Validators.required]),\n      cardHolderName: new FormControl(\"\", [Validators.required]),\n      expiraryDate: new FormControl(\"\", [Validators.required]),\n      cvv: new FormControl(\"\", [Validators.required]),\n    })\n  }\n\n  get cardReference() {\n    return this.formGroup.get(\"cardReference\");\n  }\n  get cardNumber() {\n    return this.formGroup.get(\"cardNumber\");\n  }\n  get cardHolderName() {\n    return this.formGroup.get(\"cardHolderName\");\n  }\n  get expiraryDate() {\n    return this.formGroup.get(\"expiraryDate\");\n  }\n  get cvv() {\n    return this.formGroup.get(\"cvv\");\n  }\n\n  handleFormSubmission(values) {\n    this.btnTxt = 'Please wait...'\n    let payLoad = values;\n    console.log(this.loginService.currentUser.value)\n    payLoad[\"userId\"] = this.local.userDetails.id\n    this.isError = false\n    if (this.formGroup.valid) {\n      this.apiServices.post('stored-card', payLoad).subscribe(res => {\n        this.btnTxt = 'Add card'\n        console.log(res)\n        this.router.navigate([\"my-balance\"]);\n      }, error => {\n        this.btnTxt = 'Add card'\n        console.log(error)\n      })\n    }\n    else {\n      this.btnTxt = 'Add card'\n      this.isError = true;\n    }\n  }\n\n}\n","export default \"ion-grid {\\n  padding: 10px;\\n}\\n\\nion-select {\\n  padding-left: 10px;\\n  padding: 8px;\\n  font-size: 14px;\\n}\\n\\nion-label {\\n  font-weight: 400;\\n  font-size: 14px;\\n  text-transform: capitalize;\\n}\\n\\n.txt-wrapper {\\n  padding-left: 6px;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  border: 1px solid #d3d7da9a;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1jYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGFBQUE7QUFESjs7QUFHQTtFQUNJLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7QUFBSjs7QUFFQTtFQUNJLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLDBCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLDJCQUFBO0FBRUoiLCJmaWxlIjoiYWRkLWNhcmQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ1NTIERvY3VtZW50c1xuXG5pb24tZ3JpZCB7XG4gICAgcGFkZGluZzogMTBweDtcbn1cbmlvbi1zZWxlY3Qge1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuaW9uLWxhYmVsIHtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cbi50eHQtd3JhcHBlciB7XG4gICAgcGFkZGluZy1sZWZ0OiA2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDNkN2RhOWE7XG59Il19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-android\\\" color=\\\"primary\\\">\\n      Add card\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\" class=\\\"title-ios\\\" color=\\\"primary\\\">Add card</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"handleFormSubmission(formGroup.value)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Cardholder nickname <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"cardReference\\\" type=\\\"text\\\" placeholder=\\\"Barclays Bank\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(cardReference.invalid &&(cardReference.dirty || cardReference.touched))|| isError\\\"\\n            color=\\\"danger\\\">Cardholder nickname is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Cardholder name <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"cardHolderName\\\" type=\\\"text\\\" placeholder=\\\"John Doe\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(cardHolderName.invalid &&(cardHolderName.dirty || cardHolderName.touched))|| isError\\\"\\n            color=\\\"danger\\\">Cardholder name is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Card number<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"cardNumber\\\" type=\\\"text\\\"  placeholder=\\\"1234567891011213\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(cardNumber.invalid &&(cardNumber.dirty || cardNumber.touched))|| isError\\\" color=\\\"danger\\\">\\n            Card number is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Expiry date <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"expiraryDate\\\" type=\\\"text\\\" placeholder=\\\"MM/YY\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(expiraryDate.invalid &&(expiraryDate.dirty || expiraryDate.touched))|| isError\\\"\\n            color=\\\"danger\\\">Expiry date is required</ion-label>\\n        </ion-col>\\n\\n        <ion-col>\\n          <ion-label>CVV<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input type=\\\"text\\\"  formControlName=\\\"cvv\\\" placeholder=\\\"***\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(cvv.invalid &&(cvv.dirty || cvv.touched))|| isError\\\" color=\\\"danger\\\">CVV is required\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Address Line 1 <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input type=\\\"text\\\" placeholder=\\\"25 Chill Lane\\\"></ion-input>\\n          </div>\\n          <!-- <ion-label color=\\\"danger\\\">Address Line 1 is required</ion-label> -->\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Address Line 2 <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input type=\\\"text\\\" placeholder=\\\"London\\\"></ion-input>\\n          </div>\\n          <!-- <ion-label color=\\\"danger\\\">Address Line 2 is required</ion-label> -->\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Postcode <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input type=\\\"text\\\" placeholder=\\\"EW2 6LK\\\"></ion-input>\\n          </div>\\n          <!-- <ion-label color=\\\"danger\\\">Postcode is required</ion-label> -->\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button [disabled]=\\\"btnTxt == 'Please wait...' ? true : false\\\" type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\">\\n            {{btnTxt}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\";"]}