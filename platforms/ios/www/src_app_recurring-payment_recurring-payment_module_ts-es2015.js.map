{"version":3,"sources":["./src/app/recurring-payment/recurring-payment-routing.module.ts","./src/app/recurring-payment/recurring-payment.module.ts","./src/app/recurring-payment/recurring-payment.page.ts","./src/app/recurring-payment/recurring-payment.page.scss","./src/app/recurring-payment/recurring-payment.page.html"],"names":[],"mappings":"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","file":"src_app_recurring-payment_recurring-payment_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RecurringPaymentPage } from './recurring-payment.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecurringPaymentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RecurringPaymentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecurringPaymentPageRoutingModule } from './recurring-payment-routing.module';\n\nimport { RecurringPaymentPage } from './recurring-payment.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RecurringPaymentPageRoutingModule\n  ],\n  declarations: [RecurringPaymentPage]\n})\nexport class RecurringPaymentPageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BusinessPaymentService } from '../services/business-payment.service';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { Observable, EMPTY } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\n@Component({\n  selector: 'app-recurring-payment',\n  templateUrl: './recurring-payment.page.html',\n  styleUrls: ['./recurring-payment.page.scss'],\n})\nexport class RecurringPaymentPage implements OnInit {\n  formGroup: FormGroup\n  isError: boolean = false\n  btnTxt = 'Save'\n  savedCards$: Observable<any>\n  local = this.loginService.currentUser.value\n  constructor(\n    private apiServices: BusinessPaymentService,\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      topUpAmount: new FormControl(\"\", [Validators.required]),\n      creditLimit: new FormControl(\"\", [Validators.required]),\n      cardId: new FormControl(\"\", [Validators.required]),\n    })\n    this.getSavedCards()\n  }\n\n  get topUpAmount() {\n    return this.formGroup.get(\"topUpAmount\");\n  }\n  get creditLimit() {\n    return this.formGroup.get(\"creditLimit\");\n  }\n  get cardId() {\n    return this.formGroup.get(\"cardId\");\n  }\n\n  getSavedCards() {\n    let user = this.loginService.currentUser.value\n    console.log(user)\n    this.savedCards$ = this.apiServices.get('retrieve-stored-card', 'businessId=' + user.userDetails.id).pipe(\n      tap((cards) => \"cards:\" + cards),\n      catchError((err) => {\n        return EMPTY;\n      })\n    );\n  }\n\n  handleFormSubmission(values) {\n    this.btnTxt = 'Please wait...'\n    let payLoad = values;\n    payLoad[\"userId\"] = this.local.userDetails.id\n    this.isError = false\n    if (this.formGroup.valid) {\n      this.apiServices.post('recurring', payLoad).subscribe(res => {\n        this.btnTxt = 'Save'\n        console.log(res)\n        this.router.navigate([\"my-balance\"]);\n      }, error => {\n        this.btnTxt = 'Save'\n        console.log(error)\n      })\n    }\n    else {\n      this.btnTxt = 'Save'\n      this.isError = true;\n    }\n  }\n\n}\n","export default \".card-blue {\\n  background: #1A6AE1 0% 0% no-repeat;\\n  box-shadow: 0px 10px 10px #0000001A;\\n  border-radius: 8px;\\n  opacity: 1;\\n}\\n\\n.heading-title {\\n  color: #FFFFFF;\\n  font-weight: 800;\\n  font-size: 20px;\\n  padding: 25px;\\n  line-height: 30px;\\n  float: left;\\n  width: 50%;\\n}\\n\\n.balance {\\n  padding: 40px 20px;\\n}\\n\\n.title {\\n  padding-left: 20px;\\n}\\n\\nion-grid {\\n  padding: 10px;\\n}\\n\\nion-select {\\n  padding-left: 10px;\\n  padding-right: 8px;\\n  font-size: 14px;\\n}\\n\\nion-label {\\n  font-weight: 400;\\n  font-size: 14px;\\n  text-transform: capitalize;\\n}\\n\\n.txt-wrapper {\\n  padding-left: 6px;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\n.select-wrapper {\\n  border-radius: 4px;\\n  border: 1px solid #d3d7da9a;\\n}\\n\\nion-text p {\\n  font-size: 14px;\\n}\\n\\nion-text p {\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY3VycmluZy1wYXltZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtFQUNJLG1DQUFBO0VBQ0EsbUNBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7QUFKSjs7QUFPQTtFQUNJLGNBVlU7RUFXVixnQkFBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtBQUpKOztBQU1BO0VBQ0ksa0JBQUE7QUFISjs7QUFLQTtFQUNJLGtCQUFBO0FBRko7O0FBSUE7RUFDSSxhQUFBO0FBREo7O0FBR0E7RUFDSSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUFKOztBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsMEJBQUE7QUFDSjs7QUFDQTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsMkJBQUE7QUFFSjs7QUFBQTtFQUNJLGtCQUFBO0VBQ0EsMkJBQUE7QUFHSjs7QUFBSTtFQUNJLGVBQUE7QUFHUjs7QUFDSTtFQUNJLGVBQUE7QUFFUiIsImZpbGUiOiJyZWN1cnJpbmctcGF5bWVudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDU1MgRG9jdW1lbnRzXG5cbiRibHVlLWNvbG9yOiAjMUE2QUUxO1xuJHdoaXRlLWNvbG9yOiAjRkZGRkZGO1xuXG4uY2FyZC1ibHVlIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmx1ZS1jb2xvciAwJSAwJSBuby1yZXBlYXQ7XG4gICAgYm94LXNoYWRvdzogMHB4IDEwcHggMTBweCAjMDAwMDAwMUE7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIG9wYWNpdHk6IDE7XG59XG5cbi5oZWFkaW5nLXRpdGxlIHtcbiAgICBjb2xvcjogJHdoaXRlLWNvbG9yO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIHBhZGRpbmc6IDI1cHg7XG4gICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDUwJTtcbn1cbi5iYWxhbmNlIHtcbiAgICBwYWRkaW5nOiA0MHB4IDIwcHg7XG59XG4udGl0bGUge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbn1cbmlvbi1ncmlkIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xufVxuaW9uLXNlbGVjdCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDhweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG59XG5pb24tbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuLnR4dC13cmFwcGVyIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDZweDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2Q3ZGE5YTtcbn1cbi5zZWxlY3Qtd3JhcHBlciB7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkM2Q3ZGE5YTtcbn1cbmlvbi10ZXh0IHtcbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbn1cbmlvbi10ZXh0IHtcbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbn0iXX0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-android\\\">\\n      Recurring payment\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\" class=\\\"title-ios\\\">Recurring payment</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-text class=\\\"ion-text-center\\\">\\n          <p>Set up recurring payment when your credit drops below a specified amount </p>\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"handleFormSubmission(formGroup.value)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Recurring payment<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select slot=\\\"start\\\" placeholder=\\\"Select\\\">\\n              <ion-select-option value=\\\"Yes\\\" Selected>Yes</ion-select-option>\\n              <ion-select-option value=\\\"No\\\">No</ion-select-option>\\n            </ion-select>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Saved card<ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"select-wrapper\\\">\\n            <ion-select *ngIf=\\\"savedCards$ | async as cards\\\" formControlName=\\\"cardId\\\" slot=\\\"start\\\"\\n              placeholder=\\\"Saved cards\\\">\\n              <ion-select-option *ngFor=\\\"let card of cards\\\" [value]=\\\"card.cardId\\\">{{card.cardReference}}\\n              </ion-select-option>\\n            </ion-select>\\n          </div>\\n          <ion-label *ngIf=\\\"(cardId.invalid &&(cardId.dirty || cardId.touched))|| isError\\\" color=\\\"danger\\\">Select a\\n            card</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>Top up credit by <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"topUpAmount\\\" type=\\\"number\\\" placeholder=\\\"£50.00\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(topUpAmount.invalid &&(topUpAmount.dirty || topUpAmount.touched))|| isError\\\"\\n            color=\\\"danger\\\">Top up amount is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <ion-row>\\n        <ion-col>\\n          <ion-label>When credit reaches <ion-text color=\\\"danger\\\">*</ion-text>\\n          </ion-label>\\n          <div class=\\\"txt-wrapper\\\">\\n            <ion-input formControlName=\\\"creditLimit\\\" type=\\\"number\\\" placeholder=\\\"£10.00\\\"></ion-input>\\n          </div>\\n          <ion-label *ngIf=\\\"(creditLimit.invalid &&(creditLimit.dirty || creditLimit.touched))|| isError\\\"\\n            color=\\\"danger\\\">Amount is required</ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button [disabled]=\\\"btnTxt == 'Please wait...' ? true : false\\\" type=\\\"submit\\\" color=\\\"primary\\\"\\n            expand=\\\"block\\\">\\n            {{btnTxt}}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\";"],"sourceRoot":"webpack:///"}